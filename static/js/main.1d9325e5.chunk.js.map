{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","document","change","body","style","backgroundColor","showAlert","htmlFor","Textform","useState","text","setText","buttontext","setbutText","color","heading","placeholder","value","onChange","event","target","rows","toUpperCase","length","toLowerCase","navigator","clipboard","writeText","setTimeout","split","Alert","word","alert","role","slice","message","App","setmode","setAlert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d9325e5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  const toggleMode = () => {\r\n    if (props.mode === \"light\") {\r\n      props.change(\"dark\");\r\n      document.body.style.backgroundColor = \"black\";\r\n      props.showAlert(\"Dark mode has been enabled\", \"success\");\r\n    } else {\r\n      props.change(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      props.showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    document.title = \"Home\";\r\n                  }}\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  to=\"/About\"\r\n                  onClick={() => {\r\n                    document.title = \"About\";\r\n                  }}\r\n                >\r\n                  About\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"dark\" ? \"light\" : \"dark\"\r\n              }`}\r\n            >\r\n              <input\r\n                onClick={toggleMode}\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                {props.mode === \"dark\" ? \"Disable\" : \"Enable\"} Dark mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string };\r\n// Navbar.PropTypes = { title: PropTypes.string };\r\n","import React, { useState } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nexport default function Textform(props) {\r\n  const Handleupclick = () => {\r\n    setText(text.toUpperCase());\r\n    // console.log(text);\r\n\r\n    if (text.length < 1) {\r\n      // console.log(text.length);\r\n      props.showAlert(\"Please enter a word\", \"warning\");\r\n    } else {\r\n      props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n  };\r\n\r\n  const Handledownclick = () => {\r\n    setText(text.toLowerCase());\r\n    // console.log(text);\r\n    if (text.length < 1) {\r\n      // console.log(text.length);\r\n      props.showAlert(\"Please enter a word\", \"warning\");\r\n    } else {\r\n      props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n  };\r\n\r\n  const Handlecopyclick = () => {\r\n    // setText(text.toLowerCase());\r\n    navigator.clipboard.writeText(text);\r\n    setbutText(\"Copied!\");\r\n\r\n    props.showAlert(\"Copied to clipboard!\", \"success\");\r\n\r\n    setTimeout(() => {\r\n      setbutText(\"Copy to Clipboard\");\r\n    }, 2000);\r\n    // this.value = \"Copied\";\r\n    // console.log(text);\r\n  };\r\n\r\n  const Handleonchange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const Handleclearclick = (event) => {\r\n    props.showAlert(\"Cleared!\", \"success\");\r\n\r\n    setText(\"\");\r\n    // event.target.value = \"\";\r\n  };\r\n\r\n  const [text, setText] = useState(\"\"); //We used use state hook\r\n  const [buttontext, setbutText] = useState(\"Copy to Clipboard\"); //We used use state hook\r\n  // text = \"New text\" // Wrong way to chsange\r\n  // setText(\"new Text\") //correct way\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container mb-3\"\r\n        style={{\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <h2>{props.heading}</h2>\r\n\r\n        <textarea\r\n          placeholder=\"Enter your text here.....\"\r\n          value={text}\r\n          onChange={Handleonchange}\r\n          className=\"form-control my-3\"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n          style={{\r\n            color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            backgroundColor: props.mode === \"light\" ? \"white\" : \"black\",\r\n          }}\r\n        ></textarea>\r\n        <button className=\"btn btn-primary my-1 mx-1\" onClick={Handleupclick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary my-1 mx-1\" onClick={Handledownclick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary my-1 mx-1\" onClick={Handlecopyclick}>\r\n          {buttontext}\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary my-1 mx-1\"\r\n          onClick={Handleclearclick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <h2 className=\"my-2\">Your text summary</h2>\r\n        <p>\r\n          Your text has {text.split(\" \").length} words and {text.length}{\" \"}\r\n          characters\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nexport default function Alert(props) {\r\n  const caps = (word) => {\r\n    return word[0].toUpperCase() + word.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{caps(props.alert.type)}</strong>: {props.alert.message}\r\n        {/* <button\r\n          type=\"button\"\r\n          class=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button> */}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\n// import React from \"react\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"My App\"\n        mode={mode}\n        change={setmode}\n        showAlert={showAlert}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n        {/* <Route exact path=\"/about\">\n              <About heading=\"About Us\" />\n            </Route> */}\n\n        {/* <Route exact path=\"/\"> */}\n        <Textform\n          heading=\"Enter the Text to Analyse\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n        {/* </Route>\n          </Switch> */}\n      </div>\n\n      {/* <div className=\"container my-3\">This is another div</div> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}